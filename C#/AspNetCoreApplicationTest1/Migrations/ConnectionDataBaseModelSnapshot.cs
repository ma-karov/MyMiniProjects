// <auto-generated />
using System;
using AspNetCoreApplicationTest1.CustomFiles.Models.DataBaseSqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetCoreApplicationTest1.Migrations
{
    [DbContext(typeof(ConnectionDataBase))]
    partial class ConnectionDataBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.Cars", b =>
                {
                    b.Property<short>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ID"));

                    b.Property<short>("CarCategory_ID")
                        .HasColumnType("Smallint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short?>("Price")
                        .HasColumnType("Smallint");

                    b.HasKey("ID");

                    b.HasIndex("CarCategory_ID");

                    b.ToTable("Cars", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.CarsCategories", b =>
                {
                    b.Property<short>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("CarsCategories", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("Date");

                    b.Property<string>("E_MailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("PermissionGroupRole_ID")
                        .HasColumnType("tinyint");

                    b.HasKey("ID");

                    b.HasIndex("PermissionGroupRole_ID")
                        .IsUnique()
                        .HasFilter("[PermissionGroupRole_ID] IS NOT NULL");

                    b.ToTable("RegistrationUsers", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ContactInformations", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("Date");

                    b.Property<string>("LinkAccess")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("MaleBool")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long?>("RegistrationUser_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationUser_ID")
                        .IsUnique()
                        .HasFilter("[RegistrationUser_ID] IS NOT NULL");

                    b.ToTable("RegistrationUsers_ContactInformations", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_GroupRoles", b =>
                {
                    b.Property<byte>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("ID"));

                    b.Property<string>("ArrayBoolPermission")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArrayStringPermission")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("RegistrationUser_PermissionRoleENUM")
                        .HasColumnType("TinyInt");

                    b.HasKey("ID");

                    b.ToTable("RegistrationUsers_GroupRoles", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAlbums", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Appellation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("ArrayByteImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("Date");

                    b.Property<long>("ImagesAndVideosAlbumsGraph_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ImagesAndVideosAlbumsGraph_ID")
                        .IsUnique();

                    b.ToTable("RegistrationUsers_ImagesAlbums", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAndVideosAlbumsGraph", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Appellation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("Date");

                    b.Property<long?>("RegistrationUser_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationUser_ID")
                        .IsUnique()
                        .HasFilter("[RegistrationUser_ID] IS NOT NULL");

                    b.ToTable("RegistrationUsers_ImagesAndVideosAlbumsGraph", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_VideosAlbums", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Appellation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("ArrayByteVideo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("Date");

                    b.Property<long>("ImagesAndVideosAlbumsGraph_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ImagesAndVideosAlbumsGraph_ID")
                        .IsUnique();

                    b.ToTable("RegistrationUsers_VideosAlbums", (string)null);
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.Cars", b =>
                {
                    b.HasOne("AspNetCoreApplicationTest1.CustomFiles.Models.CarsCategories", "CarCategory")
                        .WithMany()
                        .HasForeignKey("CarCategory_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarCategory");
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers", b =>
                {
                    b.HasOne("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_GroupRoles", "PermissionGroupRole")
                        .WithOne()
                        .HasForeignKey("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers", "PermissionGroupRole_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PermissionGroupRole");
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ContactInformations", b =>
                {
                    b.HasOne("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers", "RegistrationUser")
                        .WithOne()
                        .HasForeignKey("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ContactInformations", "RegistrationUser_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("RegistrationUser");
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAlbums", b =>
                {
                    b.HasOne("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAndVideosAlbumsGraph", "ImagesAndVideosAlbumsGraph")
                        .WithOne()
                        .HasForeignKey("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAlbums", "ImagesAndVideosAlbumsGraph_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImagesAndVideosAlbumsGraph");
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAndVideosAlbumsGraph", b =>
                {
                    b.HasOne("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers", "RegistrationUser")
                        .WithOne()
                        .HasForeignKey("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAndVideosAlbumsGraph", "RegistrationUser_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RegistrationUser");
                });

            modelBuilder.Entity("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_VideosAlbums", b =>
                {
                    b.HasOne("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_ImagesAndVideosAlbumsGraph", "ImagesAndVideosAlbumsGraph")
                        .WithOne()
                        .HasForeignKey("AspNetCoreApplicationTest1.CustomFiles.Models.RegistrationUsers_VideosAlbums", "ImagesAndVideosAlbumsGraph_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImagesAndVideosAlbumsGraph");
                });
#pragma warning restore 612, 618
        }
    }
}
